База Даних (БД) - впорядкований набір логічно взаємопов'язаних даних, що використовуються спільно та призначені для задоволення інформаційних потреб користувачів;

Моделі баз даних:
1) Мережна модель
 Один і той же об'єкт може одночасно виступати як у ролі головного, так і підлеглого елемента.
 Це означає, що кожний об'єкт може брати участь у довільній кількості зв'язків;
2)Реляційна модель
Дані й взаємозв'язки між ними подаються за допомогою прямокутних таблиць. 
Рядки в реляційній базі даних називають записами, а стовпці — полями;
Також це семантична модель представлення даних, заснована на теорії множин та логіці предикатів;
3)Ієрархічна модель
Будується у вигляді ієрархічної деревоподібної структури, у якій для кожного головного об'єкта існує кілька підлеглих,
а для кожного підлеглого об'єкта може бути тільки один головний.

Термінологія БД :

-концептуальний рівень (відношення, кортеж, атрибут);

-фізичний рівень (набір записів, запис, поле);

Модель даних (концептуальний опис предметної області) - найбільш абстрактний рівень проектування баз даних.
Елементи моделі даних: 
-сутності;
-атрибути (атомарність, гнучкість чи універсальність);
-домени (ім'я атрибуту: ім'я домену. Домен - набір допустимих значень, яких може містити атрибут. Домен!=тип даних);
-відношення (один до одного, один до багатьох, багато до багатьох);


Ключ

Потенційний ключ - це ключ,що визначений на одному чи декількох атрибутах, який перешкоджає появі у відношенні декількох екземплярів одного і того самого кортежу.

Первинний ключ - один з потенційних ключів. Решта потенційних ключів мають назву - альтернативні ключі.
 Ключ:
-простий;
-складений;

Зовнішній ключ - атрибут (набір атрибутів)  в деякому відношенні , який відповідає первинному ключу іншого відношення або того ж самого відношення. 
В реляційних базах даних ключ задається  обмеженням : FOREIGN KEY.

Потенційні ключі забезпечують цілісність об'єкта, зовнішні ключі підтримують цілісність посилань.

Типи даних MySQL:

Text type:
1)CHAR(size) - Містить рядок фіксованої довжини (може містити букви, цифри, та інші символи). Фіксована довжина задається в дужках. Може зберігати до 255 символів;
2)VARCHAR(size) - Містить рядок змінної довжини. Найбільша довжина задається в дужках. Може зберігати до 255 символів. Примітка: Якщо ви покладете туди значення більше за 255, тип буде перетворений на TEXT;
3)TINYTEXT - Рядок з найбільшою довжиною 255 символів;
4)TEXT - Зберігає рядок з найдовшою довжиною 65,535 символів;
5)BLOB - Великий двійковий об'єкт (Binary Large OBject). Зберігає до 65,535 байт даних;
6)MEDIUMTEXT - Зберігає рядок з максимальною довжиною в 16,777,215 символів;
7)MEDIUMBLOB - Великий двійковий об'єкт. 16 Мегабайт даних;
8)LONGTEXT - Рядок з найбільшою довжиною в 4,294,967,295 символів;
9)ENUM(x,y,z,і т.д.) - Дозволяє ввести список можливих значень. Можна перелічити до 65535 різних значень типу. Якщо значення що вставляють в поле не буде належати списку, вставиться порожнє значення;
10)LONGBLOB - Великий двійковий об'єкт. 4 Гігабайти даних;
11)SET - Подібно до ENUM окрім того, що SET може містити до 64 значень списку, і не може зберігати більше одного вибору;

Number type:
1)TINYINT(size) - Цілий від -128 до 127 . Від 0 до 255 UNSIGNED;
2)SMALLINT(size) - Від -32768 до 32767. Від 0 до 65535 UNSIGNED;
3)MEDIUMINT(size) - Від -8388608 до 8388607. Від 0 до 16777215 UNSIGNED;
4)INT(size) - Від -2147483648 до 2147483647. Від 0 до 4294967295 UNSIGNED;
5)BIGINT(size) - Від -9223372036854775808 до 9223372036854775807. Від 0 до 18446744073709551615 UNSIGNED;
6)FLOAT(size,d) - Число з плаваючою крапкою. Максимальне число цифр задається в параметрі size. Максимальне число цифр після десяткової крапки задається в параметрі d;
7)DOUBLE(size,d) - Точніше число з плаваючою крапкою. Максимальне число цифр задається в параметрі size. Максимальне число цифр після десяткової крапки задається в параметрі d;
8)DECIMAL(size,d) - DOUBLE, що зберігається як рядок з фіксованою крапкою.. Максимальне число цифр задається в параметрі size. Максимальне число цифр після десяткової крапки задається в параметрі d;

  * UNSIGNED(беззнаковий)
#Тип BOOL - синонім до TINYINT, а константи TRUE та FALSE - до 1 та 0 відповідно.

Data and time type:
1)DATE() - Дата. Формат: YYYY-MM-DD
Зауваження: Підтримується діапазон від '1000-01-01' до '9999-12-31'
2)DATETIME() - Формат: YYYY-MM-DD HH:MM:SS [2].
Зауваження: Підтримується діапазон від '1000-01-01 00:00:00' до '9999-12-31 23:59:59'
3)TIMESTAMP() - Значення TIMESTAMP зберігаються як кількість секунд з початку епохи Unix ('1970-01-01 00:00:00' UTC). Формат: YYYY-MM-DD HH:MM:SS[2]
Зауваження: Підтримується діапазон від '1970-01-01 00:00:01' UTC до '2038-01-09 03:14:07' UTC
4)TIME() - Час. Формат: HH:MM:SS
Зауваження: Підтримується діапазон від '-838:59:59' до '838:59:59'
5)YEAR() - Рік в двоцифровому, або чотирицифровому форматі.
Зауваження: Значення, що дозволені в чотирицифровому форматі: від 1901 до 2155. Значення дозволені в двоцифровому форматі: від 70 до 69, що відповідає 1970 та 2069.


Перша нормальна форма (1НФ, 1NF) - це властивість відношення у реляційній баз даних. 
Відношення знаходиться в першій нормальній формі тоді і тільки тоді, коли домен кожного атрибута містить лише нероздільні значення, а значення кожного атрибута містить лише одне значення з цього домену.
Перша нормальна форма є істотною властивістю відношення у реляційній базі даних. 
Нормалізація баз даних - це процес представлення бази даних з точки зору відносин у стандартних нормальних формах, де перша нормальна є мінімальною вимогою. Критерії першої нормальної форми:
Кожна таблиця повинна мати основний ключ: мінімальний набір колонок, які ідентифікують запис.
Уникнення повторень груп (категорії даних, що можуть зустрічатись різну кількість раз в різних записах) правильно визначаючи неключові атрибути.
Атомарність: кожен атрибут повинен мати лише одне значення, а не множину значень.

Друга нормальна форма (2НФ, 2NF) — нормальна форма, що використовується для нормалізації баз даних. Щоб перебувати в другій нормальній формі, таблиця, що перебуває в першій нормальній формі, має відповідати додатковим критеріям.
А саме: 1НФ таблиця перебуватиме в 2НФ тоді й лише тоді, коли для будь-якого потенційного ключа K і будь-якого атрибута A, який не є частиною потенційного ключа, A залежить саме від цілого потенційного ключа, а не від його частини.

Третя нормальна форма (3НФ) — нормальна форма використовна в нормалізації баз даних. За Коддом таблиця знаходиться в 3НФ тоді й лише тоді, 
коли виконуються наступні умови:
Відношення R (таблиця) знаходиться в 2НФ
Кожен неключовий атрибут відношення R нетранзитивно (безпосередньо) залежить від кожного потенційного ключа в R.
Неключовий атрибут R — атрибут, що не є частиною будь-якого потенційного ключа.
Транзитивною називають таку функціональну залежність, в якій X → Z (X визначає Z) непрямо, а через X → Y і Y → Z (і неправильно, що Y → X).


Data Definition Language (DDL) (Мова опису даних) — це сімейство комп'ютерних мов,
що використовуються в комп'ютерних програмах або користувачами баз даних для опису структури даних. 
DDL мають свою функціональну здатність, організовану за початковим словом в заяві (запит), яке майже завжди є дієсловом.
У випадку з SQL ці дієслова:

Create (Створити)
Alter (Змінити)
Drop (Видалити)

Data Manipulation Language (DML) (Мова обробки даних) — це сімейство комп'ютерних мов,
що використовуються в комп'ютерних програмах або користувачами баз даних для отримання, вставки, видалення або зміни даних в базах даних.
DML мають свою функціональну здатність, організовану за початковим словом в заяві (запит), яке майже завжди є дієсловом.
У випадку з SQL ці дієслова:

Select (Вибрати)
Insert (Вставити). Наприклад в таблиці створює новий запис;
Update (Оновити/Модифікувати).Це коли в існуючому кортежі щось міняємо
Delete (Видалити)
